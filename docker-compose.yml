
services:
  db:
    image: postgres:16
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - weather-api-pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    restart: unless-stopped

  api:
    build: .
    env_file:
      - .env
    environment:
      - DB_URL=${DB_URL}
      - TEMPLATE_DIR=${TEMPLATE_DIR}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - PGHOST=db
      - PGPORT=5432
    working_dir: /app
    entrypoint: ["/app/wait-for-postgres.sh"]
    command: ["./app"]
    ports:
      - "8080:8080"
    restart: unless-stopped
    depends_on:
      - db

  test-runner-unit:
    build: .
    env_file:
      - .env
    environment:
      - TEST_DB_URL=${TEST_DB_URL}
      - TEMPLATE_DIR=${TEMPLATE_DIR}
      - APP_BASE_URL=${APP_BASE_URL}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - PGHOST=db
      - PGPORT=5432
      - BUNDEBUG=1
    working_dir: /app
    entrypoint: ["/app/wait-for-postgres.sh"]
    command: ["make", "test-unit"]
    depends_on:
      - db
  
  test-runner-integration:
    build: .
    env_file:
      - .env
    environment:
      - TEST_DB_URL=${TEST_DB_URL}
      - TEMPLATE_DIR=${TEMPLATE_DIR}
      - APP_BASE_URL=${APP_BASE_URL}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - PGHOST=db
      - PGPORT=5432
      - BUNDEBUG=1
    working_dir: /app
    entrypoint: ["/app/wait-for-postgres.sh"]
    command: ["make", "test-integration"]
    depends_on:
      - db

  test-runner-e2e:
    build:
      context: .
      dockerfile: tests/e2e/Dockerfile.playwright
    environment:
      - APP_BASE_URL=http://api:8080
    depends_on:
      - api
      - db
    #working_dir: /app
    #entrypoint: ["/app/wait-for-postgres.sh"]
    #command: ["make", "test-e2e"]

volumes:
  weather-api-pgdata:
